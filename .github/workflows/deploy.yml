name: Build and Deploy Docker Container

on:
    push:
     branches:
        - main
       
permissions:
    id-token: write
    contents: read

jobs:
  terraform:
    name: 'Terraform Production Deployment'
    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      ARM_USE_OIDC: true
    runs-on: ubuntu-latest


    defaults:
      run:
        shell: bash
    
    steps:
      #checkout the repository to the Github Action runner test
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Login to Azure
        uses: azure/login@v2
        with:
          tenant-id: ${{ env.ARM_TENANT_ID }}
          subscription-id: ${{ env.ARM_SUBSCRIPTION_ID }}
          client-id: ${{env.ARM_CLIENT_ID }}  
      
      - uses: hashicorp/setup-terraform@v3  
        
      - name: 'Terraform init'
        id: init
        run: terraform init
        working-directory: ./terraform

      - name: 'Terraform Format'
        id: fmt
        run: terraform fmt -check
        continue-on-error: false
        working-directory: ./terraform
          
      - name: 'Terraform Validate'
        id: validate
        run: terraform validate -no-color
        working-directory: ./terraform
        continue-on-error: false
      
      - name: 'Terraform Plan'
        id: plan
        run: terraform plan -no-color
        working-directory: ./terraform
        continue-on-error: false
      
      - name: Terraform apply
        working-directory: ./terraform
        run: terraform apply -auto-approve 

  build-and-deploy:
    needs: terraform
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Set up Docker
        uses: docker/setup-docker@v2
        with:
          docker-version: '23.0.0'

      - name: Build Docker Image
        run: docker build -t my-container-image:latest .

      - name: Log in to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          server: ${{ secrets.ACR_LOGIN_SERVER }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Push Docker Image to ACR
        run: |
          docker tag my-container-image:latest ${{ secrets.ACR_LOGIN_SERVER }}/my-container-image:latest
          docker push ${{ secrets.ACR_LOGIN_SERVER }}/my-container-image:latest

      - name: Log in to Azure CLI
        uses: azure/setup-azure-cli@v1
        with:
          version: '2.x'

      - name: Deploy to Azure Container Instances
        run: |
          az login --service-principal -u ${{ secrets.AZURE_CLIENT_ID }} -p ${{ secrets.AZURE_CLIENT_SECRET }} --tenant ${{ secrets.AZURE_TENANT_ID }}
          az container create \
            --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
            --name my-container-instance \
            --image ${{ secrets.ACR_LOGIN_SERVER }}/my-container-image:latest \
            --cpu 0.5 \
            --memory 1.5 \
            --port 80 \
            --registry-login-server ${{ secrets.ACR_LOGIN_SERVER }} \
            --registry-username ${{ secrets.ACR_USERNAME }} \
            --registry-password ${{ secrets.ACR_PASSWORD }}
