name: Build and Deploy to Azure Container App

on:
  push:
    branches:
      - main  # Trigger the workflow on push to main branch

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the repository
      - name: Check out the repository
        uses: actions/checkout@v3

      # Step 2: Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'  # Node version matching your Dockerfile

      # Step 3: Log in to Azure using Service Principal
      - name: Log in to Azure CLI using Service Principal
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Step 4: Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 5: Log in to Azure Container Registry (ACR) using Azure CLI
      - name: Log in to ACR using Azure CLI
        run: |
          az acr login --name ${{ secrets.ACR_NAME }}

      # Step 6: Build and push Docker image to ACR
      - name: Build and Push Docker Image to ACR
        run: |
          docker build -t ${{ secrets.ACR_NAME }}.azurecr.io/myapp:latest .
          docker push ${{ secrets.ACR_NAME }}.azurecr.io/myapp:latest

      # Step 7: Deploy the container app using Azure CLI
      - name: Deploy to Azure Container Apps
        run: |
          az containerapp create \
            --name mycontainerapp \
            --resource-group ${{ secrets.RESOURCE_GROUP }} \
            --image ${{ secrets.ACR_NAME }}.azurecr.io/myapp:latest \
            --target-port 3000 \
            --ingress 'external' \
            --registry-server ${{ secrets.ACR_NAME }}.azurecr.io \
            --registry-identity "SystemAssigned"
